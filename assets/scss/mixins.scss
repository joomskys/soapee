// Sass CSS3 Mixins! The Cross-Browser CSS3 Sass Library
// By: Matthieu Aussaguel, //www.mynameismatthieu.com, @matthieu_tweets

// Ascending
// Used to evaluate Sass maps like our grid breakpoints.
@mixin _assert-ascending($map, $map-name) {
  $prev-key: null;
  $prev-num: null;
  @each $key, $num in $map {
    @if $prev-num == null {
      // Do nothing
    } @else if not comparable($prev-num, $num) {
      @warn "Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    } @else if $prev-num >= $num {
      @warn "Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    }
    $prev-key: $key;
    $prev-num: $num;
  }
}

// Starts at zero
// Another grid mixin that ensures the min-width of the lowest breakpoint starts at 0.
@mixin _assert-starts-at-zero($map) {
  $values: map-values($map);
  $first-value: nth($values, 1);
  @if $first-value != 0 {
    @warn "First breakpoint in `$grid-breakpoints` must start at 0, but starts at #{$first-value}.";
  }
}


// ADDS A BROWSER PREFIX TO THE PROPERTY
@mixin css3-prefix($property, $value) {
    -webkit-#{$property}: #{$value};
    -khtml-#{$property}: #{$value};
    -moz-#{$property}: #{$value};
    -ms-#{$property}: #{$value};
    -o-#{$property}: #{$value};
    #{$property}: #{$value};
}

// BACKGROUND GRADIENT
@mixin background-gradient($gradient: '90deg, rgb(22,19,87) 0%, rgb(39,35,129) 100%') {
  background-image: -moz-linear-gradient(#{$gradient});
  background-image: -webkit-linear-gradient(#{$gradient});
  background-image: -ms-linear-gradient(#{$gradient});
}

@mixin background-gradient-top($startColor: #ffb400, $endColor: #f9a33a) {
    background-image: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
    background-image: -webkit-linear-gradient(top, $startColor, $endColor);
    background-image:    -moz-linear-gradient(top, $startColor, $endColor);
    background-image:     -ms-linear-gradient(top, $startColor, $endColor);
    background-image:      -o-linear-gradient(top, $startColor, $endColor);
    background-image:         linear-gradient(top, $startColor, $endColor);
    filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');
}
@mixin background-gradient-bottom($startColor: #ffb400, $endColor: #f9a33a) {
    background-image: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
    background-image: -webkit-linear-gradient(bottom, $startColor, $endColor);
    background-image:    -moz-linear-gradient(bottom, $startColor, $endColor);
    background-image:     -ms-linear-gradient(bottom, $startColor, $endColor);
    background-image:      -o-linear-gradient(bottom, $startColor, $endColor);
    background-image:         linear-gradient(bottom, $startColor, $endColor);
    filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');
}

// BACKGROUND HORIZONTAL
@mixin background-horizontal($startColor: #ffb400, $endColor: #f9a33a) {
    background-color: $startColor;
    background-image: -webkit-gradient(linear, left top, right top, from($startColor), to($endColor));
    background-image: -webkit-linear-gradient(left, $startColor, $endColor);
    background-image:    -moz-linear-gradient(left, $startColor, $endColor);
    background-image:     -ms-linear-gradient(left, $startColor, $endColor);
    background-image:      -o-linear-gradient(left, $startColor, $endColor);
    background-image:         linear-gradient(left, $startColor, $endColor);
    filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}', gradientType='1');
}

// BACKGROUND RADIAL
@mixin background-radial($startColor: #FFFFFF, $startPos: 0%, $endColor: #000000, $endPos:100%) {
    background: -moz-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos);
    background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop($startPos,$startColor), color-stop($endPos,$endColor));
    background: -webkit-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
    background: -o-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
    background: -ms-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
    background: radial-gradient(ellipse at center, $startColor $startPos,$endColor $endPos);
}

// BACKGROUND SIZE
@mixin background-size($width: 100%, $height: $width) {
    @if type-of($width) == 'number' and $height != null {
        @include css3-prefix('background-size', $width $height);
    } @else {
        @include css3-prefix('background-size', $width);
    }
}

// BACKGROUND COLOR OPACITY
@mixin background-opacity($color: #000, $opacity: 0.85) {
    background: $color;
    background: rgba($color, $opacity);
}

// BORDER RADIUS
@mixin border-radius($radius: 5px) {
    @include css3-prefix('border-radius', $radius);
}

@mixin border-radius-separate($topLeftRadius: 5px, $topRightRadius: 5px, $bottomLeftRadius: 5px, $bottomRightRadius: 5px) {
    -webkit-border-top-left-radius:     $topLeftRadius;
    -webkit-border-top-right-radius:    $topRightRadius;
    -webkit-border-bottom-right-radius: $bottomRightRadius;
    -webkit-border-bottom-left-radius:  $bottomLeftRadius;

    -moz-border-radius-topleft:     $topLeftRadius;
    -moz-border-radius-topright:    $topRightRadius;
    -moz-border-radius-bottomright: $bottomRightRadius;
    -moz-border-radius-bottomleft:  $bottomLeftRadius;

    border-top-left-radius:     $topLeftRadius;
    border-top-right-radius:    $topRightRadius;
    border-bottom-right-radius: $bottomRightRadius;
    border-bottom-left-radius:  $bottomLeftRadius;
}

// BOX
@mixin box($orient: horizontal, $pack: center, $align: center) {
    display: -webkit-box;
    display: -moz-box;
    display: box;

    @include css3-prefix('box-orient', $orient);
    @include css3-prefix('box-pack', $pack);
    @include css3-prefix('box-align', $align);
}

// BOX RGBA
@mixin box-rgba($r: 60, $g: 3, $b: 12, $opacity: 0.23, $color: #3C3C3C) {
    background-color: transparent;
    background-color: rgba($r, $g, $b, $opacity);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$color}',endColorstr='#{$color}');
    zoom:   1;
}


// BOX SHADOW
@mixin box-shadow($x) {
    @include css3-prefix('box-shadow', $x);
}

// BOX SIZING
@mixin box-sizing($type: border-box) {
    @include css3-prefix('box-sizing', $type);
}

// COLUMNS
@mixin columns($count: 3, $gap: 10) {
    @include css3-prefix('column-count', $count);
    @include css3-prefix('column-gap', $gap);
}

// DOUBLE BORDERS
@mixin double-borders($colorOne: #3C3C3C, $colorTwo: #999999, $radius: 0) {
    border: 1px solid $colorOne;

    @include css3-prefix('box-shadow', 0 0 0 1px $colorTwo);

    @include border-radius( $radius );
}

// FLEX
@mixin flex($value: 1) {
    @include css3-prefix('box-flex', $value);
}

// FLIP
@mixin flip($scaleX: -1) {
    @include css3-prefix('transform', scaleX($scaleX));
    filter:            FlipH;
    -ms-filter:        "FlipH";
}

// FONT FACE
@mixin font-face($fontFamily: myFont, $eotFileSrc: 'myFont.eot', $woffFileSrc: 'myFont.woff', $ttfFileSrc: 'myFont.ttf', $svgFileSrc: 'myFont.svg', $svgFontID: '#myFont') {
    font-family: $fontFamily;
    src: url($eotFileSrc)  format('eot'),
    url($woffFileSrc) format('woff'),
    url($ttfFileSrc)  format('truetype'),
    url($svgFileSrc + $svgFontID) format('svg');
}

// OPACITY
@mixin opacity($opacity: 0.5) {
    $opacityMultiplied: ($opacity * 100);

    filter:         alpha(opacity=$opacityMultiplied);
    -ms-filter:     "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + $opacityMultiplied + ")";
    @include css3-prefix('opacity', $opacity);
}


// OUTLINE RADIUS
@mixin outline-radius($radius: 5px) {
    @include css3-prefix('outline-radius', $radius);
}

// RESIZE
@mixin resize($direction: both) {
    @include css3-prefix('resize', $direction);
}

// ROTATE
@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {
    @include css3-prefix('transform', rotate($deg + deg));
    filter: progid:DXImageTransform.Microsoft.Matrix(
                    M11=#{$m11}, M12=#{$m12}, M21=#{$m21}, M22=#{$m22}, sizingMethod='auto expand');
    zoom: 1;
}

// TEXT SHADOW
@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4)) {
    text-shadow: $x $y $blur $color;
}

// TRANSFORM
@mixin transform($params) {
    @include css3-prefix('transform', $params);
}

// TRANSFORM STYLE
@mixin transform-style($style: preserve-3d) {
    @include css3-prefix('transform-style', $style);
}

// TRANSITION
@mixin transition($properties...) {

    @if length($properties) >= 1 {
        @include css3-prefix('transition', $properties);
    }

    @else {
        @include css3-prefix('transition', 'all 300ms ease-in-out');
    }
}

// TRIPLE BORDERS
@mixin triple-borders($colorOne: #3C3C3C, $colorTwo: #999999, $colorThree: #000000, $radius: 0) {
    border: 1px solid $colorOne;

    @include border-radius($radius);

    @include css3-prefix('box-shadow', 0 0 0 1px $colorTwo, 0 0 0 2px $colorThree);
}

// KEYFRAMES
@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }
    @keyframes #{$animation-name} {
        @content;
    }
}

// ANIMATION
@mixin animation($str) {
    @include css3-prefix('animation', $str);
}
/* MouseWheel */
@mixin cms-mousewheel($selected : '.cms-mousewheel', $scroll_bar_w : 34px){
    #{$selected} {
        overflow: hidden;
        height: 100%;
        max-height: 100vh;
        > *{
            overflow-x: hidden;
            overflow-y: scroll;
            width: calc( 100% + #{$scroll_bar_w});
            padding-right: #{$scroll_bar_w};
            height: 100%;
            max-height: 100vh;
            padding-bottom: 50px;
            select,
            table{
                width: calc(100% - #{$scroll_bar_w});
            }
            [dir='rtl'] &{
                padding-right: 0;
                padding-left: #{$scroll_bar_w};
            }
        }
    }
}
@include cms-mousewheel();

// ThemeAmber
// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
    font-size: ($sizeValue * 16) * 1px;
    font-size: $sizeValue * 1rem;
}

// Center block
@mixin center-block {
    display: block;
    margin-left: auto;
    margin-right: auto;
}

// Clearfix
@mixin clearfix() {
    content: "";
    display: table;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
    clear: both;
}

// Move up for CMS Grid
@-webkit-keyframes moveUp {
    0% { }
    100% { -webkit-transform: translateY(0); opacity: 1; }
}

@keyframes moveUp {
    0% { }
    100% { -webkit-transform: translateY(0); transform: translateY(0); opacity: 1; }
}

@keyframes spin-rotate-left{  to{    transform:rotate(30deg)}
  from{    transform:rotate(175deg)}
}
@-webkit-keyframes spin-rotate-left{  to{    transform:rotate(30deg)}
  from{    transform:rotate(175deg)}
}
@keyframes spin-rotate-right{  from{    transform:rotate(-175deg)}
  to{    transform:rotate(-30deg)}
}
@-webkit-keyframes spin-rotate-right{  from{    transform:rotate(-175deg)}
  to{    transform:rotate(-30deg)}
}
@keyframes spin-rotate-all{  from{    transform:rotate(0deg)}
  to{    transform:rotate(-360deg)}
}
@-webkit-keyframes spin-rotate-all{  from{    transform:rotate(0deg)}
  to{    transform:rotate(-360deg)}
}
@keyframes spin-fade-in-first{  from{  opacity:1}
  to{  opacity:0}
}
@-webkit-keyframes spin-fade-in-first{  from{  opacity:1}
  to{  opacity:0}
}
@keyframes spin-fade-in-second{  from{  opacity:0}
  to{  opacity:1}
}
@-webkit-keyframes spin-fade-in-second{  from{  opacity:0}
  to{  opacity:1}
}
@-webkit-keyframes markerWave {
    0% {
        -webkit-transform: scale(1);
        transform: scale(1);
        opacity: .8
    }
    20% {
        opacity: .8
    }
    100% {
        -webkit-transform: scale(5.5);
        transform: scale(5.5);
        opacity: 0
    }
}
@keyframes markerWave {
    0% {
        -webkit-transform: scale(1);
        transform: scale(1);
        opacity: .8
    }
    20% {
        opacity: .8
    }
    100% {
        -webkit-transform: scale(5.5);
        transform: scale(5.5);
        opacity: 0
    }
}

@-webkit-keyframes sk-rotate { 100% { -webkit-transform: rotate(360deg) }}
@keyframes sk-rotate { 100% { transform: rotate(360deg); -webkit-transform: rotate(360deg) }}

@-webkit-keyframes sk-bounce {
  0%, 100% { -webkit-transform: scale(0.0) }
  50% { -webkit-transform: scale(1.0) }
}

@keyframes sk-bounce {
  0%, 100% { 
    transform: scale(0.0);
    -webkit-transform: scale(0.0);
  } 50% { 
    transform: scale(1.0);
    -webkit-transform: scale(1.0);
  }
}

@-moz-keyframes headerSlideDown{
  0%{ 
    margin-top:-150px;
  }
  100%{
    margin-top:0
  }
}
@-ms-keyframes headerSlideDown{
  0%{ 
    margin-top:-150px;
  }
  100%{
    margin-top:0
  }
}
@-webkit-keyframes headerSlideDown{
  0%{ 
    margin-top:-150px;
  }
  100%{
    margin-top:0
  }
}
@keyframes headerSlideDown{
  0%{ 
    margin-top:-150px;
  }
  100%{
    margin-top:0
  }
}

// font icon
@mixin font-awesome($icon, $weight : '', $size : ''){
  font-family: "Font Awesome 5 Free";
  content: $icon;
  @if $weight !=''{
    font-weight: $weight;
  }
  @if $size !=''{
    font-size: $size;
  }
}
@mixin font-awesome-brand($icon, $weight : ''){
  font-family: "Font Awesome 5 Brands";
  content: $icon;
  @if $weight !=''{
    font-weight: $weight;
  }
}
@mixin font-zmdi($icon, $font-size: '', $weight : 700){
  font-family: "Material-Design-Iconic-Font";
  content: $icon;
  @if $font-size !=''{
    font-size: #{$font-size};
  }
  @if $weight !=''{
    font-weight: $weight;
  }
}

// text emphasis
@mixin text-ellipsis(){
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}


@-webkit-keyframes ripple {
    70% {
        box-shadow: 0 0 0 70px rgba(255, 255, 255, 0);
    }
    100% {
        box-shadow: 0 0 0 0 rgba(255, 255, 255, 0);
    }
}

@keyframes ripple {
    70% {
        box-shadow: 0 0 0 70px rgba(255, 255, 255, 0);
    }
    100% {
        box-shadow: 0 0 0 0 rgba(255, 255, 255, 0);
    }
}

@keyframes vibrate {
  0% {
    top: 0px;
  }
  25% {
    top: -5px;
  }
  50% {
    top: 0px;
  }
  75% {
    top: 5px;
  }
  100% {
    top: 0px;
  }
}


/* Firefox */

@-moz-keyframes vibrate {
  0% {
    top: 0px;
  }
  25% {
    top: -5px;
  }
  50% {
    top: 0px;
  }
  75% {
    top: 5px;
  }
  100% {
    top: 0px;
  }
}


/* Safari and Chrome */

@-webkit-keyframes vibrate {
  0% {
    top: 0px;
  }
  25% {
    top: -5px;
  }
  50% {
    top: 0px;
  }
  75% {
    top: 5px;
  }
  100% {
    top: 0px;
  }
}


/* Opera */

@-o-keyframes vibrate {
  0% {
    top: 0px;
  }
  25% {
    top: -5px;
  }
  50% {
    top: 0px;
  }
  75% {
    top: 5px;
  }
  100% {
    top: 0px;
  }
}

// Socails Colors
$social-colors: (
    'facebook'   : #3b5998,
    'google'     : #dd4b39,
    'twitter'    : #00acee,
    'youtube'    : #df2926,
    'rss'        : #ffa500,
    'skype'      : #0ebaee,
    'yahoo'      : #690a7b,
    'dribbble'   : #ff70b7,
    'flickr'     : #ff0084,
    'linkedin'   : #087ec0,
    'vimeo'      : #27bcf1,
    'pinterest'  : #ca1f27,
    'github'     : #3f91cb,
    'instagram'  : #C13584,
    'tumblr'     : #426d9b,
    'behance'    : #1879fd,
    'stumbleupon': #eb4924,
    'dropbox'    : #17a3eb,
    'soundcloud' : #ff7e30,
    'lastfm'     : #d6063e,
    'deviantart' : #6a8a7b,
    'digg'       : #75788d,
    'xing'       : #1a8e8c,
    'sharethis'  : #25a774,
    'wordpress'  : #2187b5,
    'delicious'  : #ff9233,
    'reddit'     : #377bda,
    'apple'      : #3dd0f5,
    'vk'         : #4778ac,
    'android'    : #a3c537,
    'amazon'     : #fc9a06,
    'edge'       : #327ec9,
    'vine'       : #16cc91,
    'whatsapp'   : #2fc631,
    'renren'     : #0663b7,
    'windows'    : #07b0f1,
    'modx'       : #7ac343,
    
);
//'sharethis'  : $accent_color
// loop, to style social media links
@mixin soapee_social_color($tag : color, $priority : ''){
    @each $name, $color in $social-colors {
        &[class*='#{$name}'],
        &[href*='#{$name}']{
            @if $priority != '' {
                #{$tag}: $color $priority;
            } @else {
                #{$tag}: $color;
            }
        }
    }
}
// soapee separator line
@mixin soapee_meta_separator_line($position: 'bottom'){
  position: relative;
  &:before,
  &:after{
    content: '';
    display: block;
    height: 1px;
    position: absolute;
    #{$position} : 0;
    left: 0;
    [dir="rtl"] &{
      left: auto;
      right: 0;
    }
  }
  &:before{
    width: 103px;
    background-color: $secondary_color;
    z-index: 1;
  }
  &:after{
    background-color: rgba(200, 200, 200, 0.702);
    right: 0;
  }
}